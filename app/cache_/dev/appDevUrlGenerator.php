<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_security_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_security_logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ef_connect' => array (  0 =>   array (    0 => 'instance',    1 => 'homeFolder',  ),  1 =>   array (    '_controller' => 'FM\\ElfinderBundle\\Controller\\ElFinderController::loadAction',    'instance' => 'default',    'homeFolder' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeFolder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instance',    ),    2 =>     array (      0 => 'text',      1 => '/efconnect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'elfinder' => array (  0 =>   array (    0 => 'instance',    1 => 'homeFolder',  ),  1 =>   array (    '_controller' => 'FM\\ElfinderBundle\\Controller\\ElFinderController::showAction',    'instance' => 'default',    'homeFolder' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeFolder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instance',    ),    2 =>     array (      0 => 'text',      1 => '/elfinder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mail_default_index' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'MailBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/mail/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mail_default_send' => array (  0 =>   array (    0 => 'name',    1 => 'mail',  ),  1 =>   array (    '_controller' => 'MailBundle\\Controller\\DefaultController::sendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mail',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    2 =>     array (      0 => 'text',      1 => '/mail/send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_json_cruises' => array (  0 =>   array (    0 => 'pre',  ),  1 =>   array (    'pre' => false,    '_controller' => 'BaseBundle\\Controller\\ApiController::cruisesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pre',    ),    1 =>     array (      0 => 'text',      1 => '/api/json/cruises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_json_kauta' => array (  0 =>   array (    0 => 'cruise_code',    1 => 'pre',  ),  1 =>   array (    'pre' => false,    '_controller' => 'BaseBundle\\Controller\\ApiController::kautaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pre',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cruise_code',    ),    2 =>     array (      0 => 'text',      1 => '/api/json/kauta',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cruise' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cruise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'image_resizer' => array (  0 =>   array (    0 => 'ship_name',    1 => 'ship_image',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\PhotoController::imageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ship_image',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ship_name',    ),    2 =>     array (      0 => 'text',      1 => '/images/ship',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'security_login_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\SecurityController::loginCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sitemapxml' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\SiteMapController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sitemap.xml',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajax_zayavka_send' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\ZayavkaSendAjaxController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/zayavka_send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\AdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_in_cruise_hot' => array (  0 =>   array (    0 => 'type',    1 => 'code',    2 => 'val',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\ApiInController::cruiseHotAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'val',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'code',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'text',      1 => '/api_in/cruise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/page/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/page/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/page/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\DocumentController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getshipsinfoflot' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadInfoflotController::getShipsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/getshipsinfoflot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadshipinfoflot' => array (  0 =>   array (    0 => 'ship_id',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadInfoflotController::loadShipAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ship_id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/loadshipinfoflot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getshipsmosturflot' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadMosturflotController::getShipsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/getshipsmosturflot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadshipmosturflot' => array (  0 =>   array (    0 => 'ship_id',  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadMosturflotController::loadShipAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ship_id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/loadshipmosturflot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadship' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadShipController::loadshipAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/loadship',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadshipdo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadShipController::loadshipDoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/loadshipdo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadvodohod' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AdminBundle\\Controller\\LoadVodohodController::loadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/loadvodohod',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadvodohod_ship' => array (  0 =>   array (    0 => 'ship_id',  ),  1 =>   array (    'ship_id' => NULL,    '_controller' => 'AdminBundle\\Controller\\LoadVodohodController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ship_id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/loadvodohod_ship',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'image_resize' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\PhotoController::imageAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/image',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cruiseorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\OrderController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cruise/order.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cruiseorder_code' => array (  0 =>   array (    0 => 'code',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\OrderController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'code',    ),    1 =>     array (      0 => 'text',      1 => '/cruise/order',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\DocumentController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'specialoffer' => array (  0 =>   array (    0 => 'offer',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::specialofferAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'offer',    ),    2 =>     array (      0 => 'text',      1 => '/specialoffer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cruisedetails' => array (  0 =>   array (    0 => 'url',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::detailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'url',    ),    2 =>     array (      0 => 'text',      1 => '/cruise/cruisedetails',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'monthschedule' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::scheduleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cruise/monthschedule',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cruiseroutes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\DocumentController::routesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cruise/routes.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categoryroutes' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::categoryroutesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/cruise/categoryroutes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'month_cruises' => array (  0 =>   array (    0 => 'month',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::monthAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'month',    ),    2 =>     array (      0 => 'text',      1 => '/cruise/month',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ship' => array (  0 =>   array (    0 => 'ship',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::shipAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'ship',    ),    2 =>     array (      0 => 'text',      1 => '/cruise/ship',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page' => array (  0 =>   array (    0 => 'first',    1 => 'second',    2 => 'name',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\DocumentController::pageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'name',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'second',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'first',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\CruiseController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_small' => array (  0 =>   array (    0 => 'first',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\DocumentController::pageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'first',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\ShipController::classlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cruise/classlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'alphabetlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\ShipController::alphabetlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cruise/alphabetlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showDocuments' => array (  0 =>   array (    0 => 'first',    1 => 'second',  ),  1 =>   array (    '_controller' => 'BaseBundle\\Controller\\DocumentCategoryController::documentsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'second',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'first',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
