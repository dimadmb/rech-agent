<?php

namespace Proxies\__CG__\BaseBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CruiseCruise extends \BaseBundle\Entity\CruiseCruise implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'id', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'code', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'description', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'route', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'turOperator', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'startdate', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'enddate', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'daycount', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'ship', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'prices', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'programItems', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'category'];
        }

        return ['__isInitialized__', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'id', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'code', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'description', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'route', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'turOperator', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'startdate', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'enddate', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'daycount', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'ship', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'prices', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'programItems', '' . "\0" . 'BaseBundle\\Entity\\CruiseCruise' . "\0" . 'category'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CruiseCruise $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function init(\BaseBundle\Entity\CruiseShip $ship, \Doctrine\Common\Collections\ArrayCollection $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'init', [$ship, $categories]);

        return parent::init($ship, $categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoute($route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoute', [$route]);

        return parent::setRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoute', []);

        return parent::getRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartdate($startdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartdate', [$startdate]);

        return parent::setStartdate($startdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartdate', []);

        return parent::getStartdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnddate($enddate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnddate', [$enddate]);

        return parent::setEnddate($enddate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnddate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnddate', []);

        return parent::getEnddate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDaycount($daycount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDaycount', [$daycount]);

        return parent::setDaycount($daycount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDaycount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDaycount', []);

        return parent::getDaycount();
    }

    /**
     * {@inheritDoc}
     */
    public function setShip(\BaseBundle\Entity\CruiseShip $ship = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShip', [$ship]);

        return parent::setShip($ship);
    }

    /**
     * {@inheritDoc}
     */
    public function getShip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShip', []);

        return parent::getShip();
    }

    /**
     * {@inheritDoc}
     */
    public function getMinPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinPrice', []);

        return parent::getMinPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\BaseBundle\Entity\CruiseCruiseCategory $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', [$category]);

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\BaseBundle\Entity\CruiseCruiseCategory $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', [$category]);

        return parent::removeCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrice(\BaseBundle\Entity\CruiseShipCabinCruisePrice $prices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrice', [$prices]);

        return parent::addPrice($prices);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrice(\BaseBundle\Entity\CruiseShipCabinCruisePrice $prices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrice', [$prices]);

        return parent::removePrice($prices);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrices', []);

        return parent::getPrices();
    }

    /**
     * {@inheritDoc}
     */
    public function addProgramItem(\BaseBundle\Entity\CruisePlace $place = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProgramItem', [$place]);

        return parent::addProgramItem($place);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProgramItem(\BaseBundle\Entity\CruiseCruiseProgramItem $programItems)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProgramItem', [$programItems]);

        return parent::removeProgramItem($programItems);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgramItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgramItems', []);

        return parent::getProgramItems();
    }

    /**
     * {@inheritDoc}
     */
    public function setTurOperator($turOperator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTurOperator', [$turOperator]);

        return parent::setTurOperator($turOperator);
    }

    /**
     * {@inheritDoc}
     */
    public function getTurOperator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTurOperator', []);

        return parent::getTurOperator();
    }

}
